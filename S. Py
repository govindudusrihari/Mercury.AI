{"mental_health_chatbot": {"frontend": {"index.html": "<!DOCTYPE html>\n<html>\n<head>\n<title>Mental Health Chatbot</title>\n<script src=\"https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js\"></script>\n<link rel=\"stylesheet\" href=\"style.css\">\n</head>\n<body>\n    <h1>Chatbot</h1>\n    <div id=\"chatbox\"></div>\n    <input type=\"text\" id=\"user_input\" placeholder=\"Type your message...\">\n    <button onclick=\"sendMessage()\">Send</button>\n<script src=\"script.js\"></script>  </body>\n</html>"}, "backend": {"main.py": "# Import necessary libraries\nimport os\nfrom flask import Flask, request, jsonify\nimport requests\nfrom dotenv import load_dotenv\n\n# Load environment variables from .env file\nload_dotenv()\n\n# Initialize Flask app\napp = Flask(__name__)\n\n# API keys and settings\nGEMINI_API_KEY = os.getenv(\"GEMINI_API_KEY\")  # Replace with your actual API key\nGEMINI_API_URL = \"https://api.gemini.google.com/v1/chat\"\n\nconversation_history = []\n\n@app.route('/chat', methods=['POST'])\ndef chat():\n    global conversation_history #Access conversation_history from route \n    user_message = request.json.get('message')\n    \n    #Prepare the conversation history to include context in chat\n    conversation_history.append({\"author\":\"user\",\"content\": user_message})\n\n    # Gemini API call\n    headers = {\n        'Authorization': f'Bearer {GEMINI_API_KEY}',\n        'Content-Type': 'application/json'\n    }\n    gemini_request_data = {\n        \"message\": user_message,\n         \"conversation_history\":conversation_history,\n         \"temperature\":0.7\n    }\n    response = requests.post(GEMINI_API_URL, headers=headers, json=gemini_request_data)\n    response_data = response.json()\n    bot_message = response_data['content']\n    \n    # Adding the chatbot message into the history as well.\n    conversation_history.append({\"author\": \"bot\", \"content\": bot_message})\n    return jsonify({'message': bot_message})\n\n\nif __name__ == '__main__':\n    app.run(debug=True, port=int(os.environ.get('PORT', 8080)))"}, "additional": {"style.css": "body {\n    font-family: sans-serif;\n}\n\n#chatbox {\n    width: 300px;\n    height: 400px;\n    border: 1px solid #ccc;\n    overflow-y: scroll;\n}\n\n#user_input {\n    width: 200px;\n}\n", "script.js": "// JavaScript for client-side interaction\nfunction sendMessage(){\nconst userInput = document.getElementById(\"user_input\").value;\ndocument.getElementById(\"user_input\").value = \"\";\n\naxios.post('/chat', { message: userInput }).then(response => {\n    const botMessage = response.data.message;\n    let chatbox = document.getElementById(\"chatbox\");\n    chatbox.innerHTML += `<p><b>You:</b> ${userInput}</p>`;\n    chatbox.innerHTML += `<p><b>Bot:</b> ${bot_message}</p>`;\n    chatbox.scrollTop = chatbox.scrollHeight;  // Keep scrolled to bottom\n});\n}\n"}, "setup_instructions": ["Frontend (index.html, style.css, script.js): Save these files in a folder accessible to your web server. The paths in index.html should point to the correct files", "Backend (main.py):", "Install Python libraries : python -m pip install flask requests python-dotenv", "Set up .env file(Highly Recommended)", "In your project root, create a file named '.env'. This will hide credentials such as API_Key from source code", "In your .env file, insert the following and save:", "GEMINI_API_KEY = \"YOUR_ACTUAL_API_KEY\"  #Get API from Google could", "Start server:", "Navigate into root in terminal: python main.py", "Visit `http://127.0.0.1:8080` in your web browser or `http://localhost:8080`"]}}
